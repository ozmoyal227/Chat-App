<div class="container-fluid h-100">
  <div class="row h-100">
    <!-- User Panel -->
    <div class="col-3 bg-info h-100 px-3 rounded" id="user-panel">
      <div class="card-box d-flex flex-column h-100 text-center py-3">
        <section>
          <div class="user-pic mx-auto my-4">
            <img
              src="/images/user.svg"
              class="img-fluid bg-secondary rounded-circle"
              alt="User Pic"
            />
          </div>
          <h4 class="m-0 border border-dark p-1 bg-light mx-5 rounded-pill">
            <% if (locals.user) { %> <%= user.name %> <% } %>
          </h4>
        </section>
        <hr class="my-4 text-white" />
        <h4 class="text-white align-self-start">My files:</h4>
        <section class="flex-grow-1 overflow-hidden">
          <!-- Files -->
          <ul
            id="userFiles"
            class="list-group list-group-flush overflow-auto h-100 rounded"
          ></ul>
        </section>
      </div>
    </div>

    <!-- Chat -->
    <div class="p-0 col-9 h-100 rounded" id="chat-bg">
      <div class="d-flex flex-column h-100">
        <!-- Messages -->
        <div
          id="chat-content"
          class="overflow-auto d-flex flex-column flex-grow-1 p-3"
        >
          <!-- Others message -->
          <% for (var i = 0; i < lobby.messages?.length ?? 0; i++) { %>

          <!-- Date -->
          <% if (!lobby.messages[i-1] ||
          !moment(lobby.messages[i].sentAt).isSame(lobby.messages[i-1].sentAt,
          'day')) { %>
          <div
            class="media media-meta-day text-center border-bottom border-top my-3 text-white"
          >
            <%= moment(lobby.messages[i].sentAt).format("MMM D") %> - <%=
            moment(lobby.messages[i].sentAt).fromNow() %>
          </div>
          <% } %> <% if (lobby.messages[i].senderId !== user.id) { %>
          <div
            class="media media-chat d-flex media-chat-reverse text-end flex-row-reverse align-self-end mb-2"
          >
            <% } else { %>
            <div class="media media-chat d-flex align-self-start mb-3">
              <% } %>

              <img
                class="avatar align-self-start"
                src="https://img.icons8.com/color/36/000000/administrator-male.png"
                alt="..."
              />
              <div class="card p-2 media-body flex-grow-1">
                <p class="mb-0">
                  <strong><%= lobby.messages[i].senderName %></strong>
                </p>
                <p class="mb-0"><%= lobby.messages[i].text %></p>

                <% if (lobby.messages[i].file?.name){ %>
                <div class="file card border border-dark">
                  <!-- Image Preview -->
                  <% if (lobby.messages[i].file?.type &&
                  isSupportedPreviewType(lobby.messages[i].file.type)){ %>
                  <img
                    class="img-fluid p-2"
                    src="data:<%= lobby.messages[i].file.type %>;base64, <%= lobby.messages[i].file.data %>"
                  />
                  <% } %>
                  <div class="card-body text-center">
                    <h5 class="card-title">
                      <%= lobby.messages[i].file.name %>
                    </h5>
                    <a
                      class="btn btn-success"
                      download="<%= lobby.messages[i].file.name %>"
                      href="data:<%= lobby.messages[i].file.type %>;base64, <%= lobby.messages[i].file.data %>"
                      ><i class="bi bi-file-earmark-arrow-down"></i
                    ></a>

                    <button
                      id="addFileToUserBtn"
                      class="btn btn-primary"
                      onclick="onAddFileToUser('<%= JSON.stringify(lobby.messages[i].file) %>' )"
                    >
                      <i class="bi bi-file-earmark-plus"></i>
                    </button>
                  </div>
                </div>

                <% } %>

                <p class="meta m-0">
                  <span
                    ><%= moment(lobby.messages[i].sentAt).format("hh:mm A")
                    %></span
                  >
                </p>
              </div>
            </div>

            <% } %>
          </div>

          <!-- Add Message -->
          <%- include('./partials/add-message.ejs', { user:user, chatId:
          lobby.id}) %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const socket = io();
  const chatId = "<%= lobby?.id %>";
  const userId = "<%= user?.id %>";

  const Loader = () =>
    `<div class="text-center">
      <div class="spinner-border text-light" role="status"></div>
    </div>`;

  const onConnect = () => {
    console.log("User connected...");
    socket.emit("chat:join", chatId);
  };

  const onNewMessageReceived = (message) => {
    // Add message to UI #chat-content
    const newMessage = createNewMessage(
      message.senderId,
      message.senderName,
      message.text,
      message.sentAt,
      message.file
    );
    $("#chat-content").append(newMessage);
    // scroll to bottom of chat-content
    $("#chat-content").animate(
      { scrollTop: $("#chat-content").prop("scrollHeight") },
      500
    );
  };

  const createNewMessage = (senderId, senderName, text, sentAt, file) => {
    return `
        <div class="media media-chat d-flex ${
          senderId === userId
            ? "align-self-start"
            : "align-self-end flex-row-reverse text-end"
        } mb-3">
          <img class="avatar align-self-start" src="https://img.icons8.com/color/36/000000/administrator-male.png" alt="...">
          <div class="card p-2 media-body flex-grow-1">
            <p class="mb-0">
              <strong>${senderName}</strong>
            </p>
            <p class="mb-0">${text}</p>

            ${
              !file?.name
                ? ""
                : `<div class="file card border border-dark">
                      ${
                        file?.type && isSupportedPreviewType(file.type)
                          ? `<img class="img-fluid p-2" src="data:${file.type};base64, ${file.data}" />`
                          : ""
                      }
                      <div class="card-body text-center">
                        <h5 class="card-title">${file.name}</h5>
                        <a class="btn btn-success" download="${
                          file.name
                        }" href="data:${file.type};base64, ${
                    file.data
                  }"><i class="bi bi-file-earmark-arrow-down"></i>
                        </a>

                        <button
                          class="btn btn-primary"
                          onclick='onAddFileToUser(${JSON.stringify(
                            JSON.stringify(file)
                          )})'
                        >
                          <i class="bi bi-file-earmark-plus"></i>
                        </button>
                      </div>
                  </div>`
            }


            <p class="meta m-0">
              <span>${moment(sentAt).format("hh:mm A")}</span>
            </p>
          </div>
        </div>
        `;
  };

  const isSupportedPreviewType = (type) => {
    const supportedTypes = [
      "image/png",
      "image/jpeg",
      "image/jpg",
      "image/svg+xml",
    ];
    return !!supportedTypes.find((t) => type === t);
  };

  socket.on("connect", onConnect);
  socket.on("message:add", (message) => {
    onNewMessageReceived(message);
  });

  const onAddFileToUser = async (file) => {
    const addFileResp = await request("POST", "/users/files", JSON.parse(file));

    if (!addFileResp || !addFileResp.ok) {
      alert("Error adding file to user");
      return;
    }

    refreshUserFiles();
  };

  const onRemoveFileFromUser = async (fileId) => {
    console.log(fileId);

    const removeFileResp = await request("DELETE", `/users/files/${fileId}`);

    if (!removeFileResp || !removeFileResp.ok) {
      alert("Error removing file from user");
      return;
    }

    refreshUserFiles();
  };

  const refreshUserFiles = async () => {
    $("#userFiles").empty();
    $("#userFiles").append(Loader);

    const getUserFilesResp = await request("GET", "/users/files");

    if (!getUserFilesResp?.data || !getUserFilesResp?.success) {
      $("#userFiles").empty();
      alert("Error reloading user files");
      return;
    }

    // [UI] Refresh user files in UI #userFiles
    const userFilesList = createNewUserFilesList(getUserFilesResp?.data);

    $("#userFiles").empty();
    $("#userFiles").append(userFilesList);
  };

  const createNewUserFilesList = (files) => {
    return (
      files?.map((file) => {
        return `
      <li
        class="list-group-item d-flex justify-content-between align-items-center"
      >
        <h6 id="file-name">${file.name}</h6>
        
        <div>
          <a
            class="btn btn-success"
            download="${file.name}"
            href="data:${file.type};base64, ${file.data}"
          >
            <i class="bi bi-file-earmark-arrow-down"></i>
          </a>
          <button
            id="removeFileFromUserBtn"
            class="btn btn-danger"
            onclick='onRemoveFileFromUser(${JSON.stringify(file.id)})'
          >
            <i class="bi bi-file-earmark-minus"></i>
          </button>
        </div>
      </li>
      `;
      }) ?? ""
    );
  };

  // adding event for enter press
  var input = document.getElementById("add-msg");
  input.addEventListener("keyup", function (event) {
    if (event.keyCode === 13) {
      event.preventDefault();
      document.getElementById("sendButton").click();
    }
  });

  const onPageLoad = async () => {
    await refreshUserFiles();
    $("#chat-content").animate(
      { scrollTop: $("#chat-content").prop("scrollHeight") },
      500
    );
  };

  setTimeout(() => {
    onPageLoad();
  });
</script>
